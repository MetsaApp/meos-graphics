name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: go
          
      # The logic below handles the case where a release is created
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
        
      - name: Set up Go
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Build
        if: ${{ steps.release.outputs.release_created }}
        run: |
          go mod download
          GOOS=linux GOARCH=amd64 go build -o dist/meos-graphics-linux-amd64 ./cmd/meos-graphics
          GOOS=windows GOARCH=amd64 go build -o dist/meos-graphics-windows-amd64.exe ./cmd/meos-graphics
          GOOS=darwin GOARCH=amd64 go build -o dist/meos-graphics-darwin-amd64 ./cmd/meos-graphics
          GOOS=darwin GOARCH=arm64 go build -o dist/meos-graphics-darwin-arm64 ./cmd/meos-graphics
          
      - name: Upload Release Artifacts
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} dist/* --clobber